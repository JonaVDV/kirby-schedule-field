import { transformQuery } from '@kql-ts/core';
// give me an example of a basic auth header:
export async function kqlHandler({ query, endpoint, language, fetch, auth, headers = {}, timeout }) {
    let controller;
    let timeoutId;
    try {
        if (timeout) {
            controller = new AbortController();
            timeoutId = setTimeout(() => controller?.abort(), timeout);
        }
        const queryBody = transformQuery(query);
        const response = await fetch(endpoint, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                ...(language && { 'X-Language': language }),
                ...headers,
                ...(auth && { Authorization: auth })
            },
            body: JSON.stringify(queryBody),
            ...(controller && { signal: controller.signal })
        });
        if (!response.ok) {
            const errorBody = await response.text();
            throw new Error(`KQL request failed: ${response.status} ${response.statusText}\n${errorBody}`);
        }
        return response.json();
    }
    finally {
        if (timeoutId)
            clearTimeout(timeoutId);
    }
}
